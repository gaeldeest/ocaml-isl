open IslSpace_Core

module Make (Ctx: IslCtx.SIG): IslSpace_sigs.S with module Types := Types = struct
    module Types = Types

    let find_dim_by_id = find_dim_by_id Ctx.ctx
    let find_dim_by_name = find_dim_by_name Ctx.ctx
    let dim = dim Ctx.ctx
    let dump = dump Ctx.ctx
    let get_tuple_name = get_tuple_name Ctx.ctx
    let can_curry = can_curry Ctx.ctx
    let can_uncurry = can_uncurry Ctx.ctx
    let can_zip = can_zip Ctx.ctx
    let compatible = compatible Ctx.ctx
    let domain_is_wrapping = domain_is_wrapping Ctx.ctx
    let has_dim_id = has_dim_id Ctx.ctx
    let has_dim_name = has_dim_name Ctx.ctx
    let has_tuple_id = has_tuple_id Ctx.ctx
    let has_tuple_name = has_tuple_name Ctx.ctx
    let is_domain = is_domain Ctx.ctx
    let is_equal = is_equal Ctx.ctx
    let is_map = is_map Ctx.ctx
    let is_params = is_params Ctx.ctx
    let is_range = is_range Ctx.ctx
    let is_set = is_set Ctx.ctx
    let is_wrapping = is_wrapping Ctx.ctx
    let match_ = match_ Ctx.ctx
    let range_is_wrapping = range_is_wrapping Ctx.ctx
    let tuple_match = tuple_match Ctx.ctx
    let add_dims = add_dims Ctx.ctx
    let align_params = align_params Ctx.ctx
    let alloc = alloc Ctx.ctx
    let curry = curry Ctx.ctx
    let domain = domain Ctx.ctx
    let domain_factor_domain = domain_factor_domain Ctx.ctx
    let domain_map = domain_map Ctx.ctx
    let domain_product = domain_product Ctx.ctx
    let drop_dims = drop_dims Ctx.ctx
    let drop_inputs = drop_inputs Ctx.ctx
    let drop_outputs = drop_outputs Ctx.ctx
    let extend = extend Ctx.ctx
    let from_domain = from_domain Ctx.ctx
    let from_range = from_range Ctx.ctx
    let insert_dims = insert_dims Ctx.ctx
    let join = join Ctx.ctx
    let map_from_domain_and_range = map_from_domain_and_range Ctx.ctx
    let map_from_set = map_from_set Ctx.ctx
    let move_dims = move_dims Ctx.ctx
    let params = params Ctx.ctx
    let params_alloc = params_alloc Ctx.ctx
    let product = product Ctx.ctx
    let range = range Ctx.ctx
    let range_factor_domain = range_factor_domain Ctx.ctx
    let range_factor_range = range_factor_range Ctx.ctx
    let range_map = range_map Ctx.ctx
    let range_product = range_product Ctx.ctx
    let reset_tuple_id = reset_tuple_id Ctx.ctx
    let reset_user = reset_user Ctx.ctx
    let reverse = reverse Ctx.ctx
    let set_alloc = set_alloc Ctx.ctx
    let set_dim_id = set_dim_id Ctx.ctx
    let set_dim_name = set_dim_name Ctx.ctx
    let set_from_params = set_from_params Ctx.ctx
    let set_tuple_id = set_tuple_id Ctx.ctx
    let set_tuple_name = set_tuple_name Ctx.ctx
    let uncurry = uncurry Ctx.ctx
    let unwrap = unwrap Ctx.ctx
    let wrap = wrap Ctx.ctx
    let zip = zip Ctx.ctx
    let get_dim_id = get_dim_id Ctx.ctx
    let get_tuple_id = get_tuple_id Ctx.ctx
    let get_dim_name = get_dim_name Ctx.ctx
end
